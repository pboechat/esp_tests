#!/usr/bin/env bash

set -euo pipefail

if [[ $# -lt 2 ]]; then
  echo "Usage: $0 <project-dir> <esp-target> [usb-port]" >&2
  exit 1
fi

PROJ_DIR="$1"
TARGET="$2"
USB_PORT="${3:-/dev/ttyUSB0}"

if [ ! -e "$PROJ_DIR" ]; then
	echo "Invalid project dir"
	exit 1
fi

pushd "$PROJ_DIR"

idf.py -B build_${TARGET} set-target ${TARGET}

mkdir -p ".vscode"

cat > ".vscode/settings.json" <<EOF
{
  // Auto-generated by $(basename "$0")
  "idf.openOcdConfigs": [
    "board/${TARGET}-builtin.cfg"
  ],
  "idf.customExtraVars": {
    "IDF_TARGET": "${TARGET}"
  },
  "idf.buildPath": "\${workspaceFolder}/build_${TARGET}",
  "idf.flashType": "UART",
  "idf.port": "${USB_PORT}",
  "idf.openOcdLaunchArgs": [
    "-d\${config:idf.openOcdDebugLevel}",
    "\${config:idf.openOcdConfigs,-f}",
    "-c",
    "init",
    "-c",
    "reset halt"
  ]
}
EOF

cat > ".vscode/launch.json" <<EOF
{
	// Auto-generated by $(basename "$0")
    "configurations": [
        {
            "type": "gdbtarget",
            "request": "attach",
            "name": "debug",
            "program": "\${workspaceFolder}/build_${TARGET}/\${command:espIdf.getProjectName}.elf",
            "initCommands": [
                "mon reset halt",
                "maintenance flush register-cache"
            ],
            "gdb": "\${command:espIdf.getToolchainGdb}",
            "target": {
                "connectCommands": [
                    "set remotetimeout 20",
                    "-target-select extended-remote localhost:3333"
                ]
            }
        }
    ]
}
EOF

popd

echo -e "$0: \033[0;32mProject configured successfully!\033[0m"
